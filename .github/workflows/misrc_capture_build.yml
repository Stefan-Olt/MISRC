name: "Build Windows Release"

on:
  workflow_dispatch:
  push:
    tags:
      - "misrc_capture-*"

env:
  ARCHIVE_NAME_WINDOWS: ${{ github.ref_name }}-win-x86_64.zip

jobs:
  build-windows:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install NASM
        env:
          WINDOWS_NASM_URL: https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip
          WINDOWS_NASM_DIR: nasm-2.16.01
        run: |
          Invoke-WebRequest ${{ env.WINDOWS_NASM_URL }} -OutFile .\nasm.zip
          Expand-Archive .\nasm.zip -DestinationPath .
          Write-Output .\${{ env.WINDOWS_NASM_DIR }} | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install FLAC v1.5.0
        env:
          FLAC_URL: https://github.com/xiph/flac/releases/download/1.5.0/flac-1.5.0-win.zip
          FLAC_DIR: flac-1.5.0-win
        run: |
          Invoke-WebRequest ${{ env.FLAC_URL }} -OutFile .\flac.zip
          Expand-Archive .\flac.zip -DestinationPath .
          # Set environment variables for CMake to find FLAC
          Write-Output "FLAC_ROOT=${{ github.workspace }}\${{ env.FLAC_DIR }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          Write-Output "${{ github.workspace }}\${{ env.FLAC_DIR }}\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build
        run: |
          cmake -B ${{ github.workspace }}\misrc_tools/build `
            ${{ github.workspace }}\misrc_tools `
            -G "Visual Studio 17 2022" `
            -A x64
          cmake --build ${{ github.workspace }}\misrc_tools/build --target misrc_capture --config Release

      - name: Create binary archive
        run: |
          # Create a temporary directory for bundling
          New-Item -ItemType Directory -Path .\bundle -Force
          # Copy the executable
          Copy-Item ${{ github.workspace }}\misrc_tools\build\Release\misrc_capture.exe .\bundle\
          # Copy FLAC DLL if it exists
          if (Test-Path "${{ github.workspace }}\flac-1.5.0-win\bin\libFLAC.dll") {
            Copy-Item ${{ github.workspace }}\flac-1.5.0-win\bin\libFLAC.dll .\bundle\
          }
          # Create the archive with all files
          Compress-Archive -Path .\bundle\* -DestinationPath ${{ env.ARCHIVE_NAME_WINDOWS }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: misrc_capture-windows
          path: ${{ env.ARCHIVE_NAME_WINDOWS }}
          if-no-files-found: error

